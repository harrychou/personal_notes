
Andreas Ohlund
http://skillsmatter.com/podcast/open-source-dot-net/nservicebus-3
What's new with NServiceBus 3.0?
- basics of NServiceBus
- current release 2.6
- 3.0 goal: better out of box experience
	* more guildline/conventions
- agenda
	storage
	naming endpoints (key to 3.0)
	hadling time (timouts)
	bridge remote sites/apps
	random stuff

- what is bus anyway?
	common confusion: with broker
	bus is like ethernet
		- no centralized machine
		- it is everywhere, helping services talk to each other
		- has logical addresses (sperate from physical)
		- load balanace capability
	unlike eithernet
		- publish/subscribe
		- message ID
		- need to store things

- each endpoint need a storage
	- saga
	- subscriptions
	- timeouts
	- for distributers, keep track of available workers
	- retry (deduplication)

- need to scale out, shared storage

- 3.0 using RavenDB as storage
	bundled with NServiceBus
	still support NHibernate, but moved to other DLL
	easier to work with RavenDB
	fast, support DTC transactions

- Naming the endpoints (convention over configuration)
	* make sure you give endpoint a good name
	* if endpoint call order
		- DB name: orders
		- input queue Orders
		- timout queue: Orders.Timeouts
		- url of gateway: http://localhost/orders

- naming endpoints
	* default to namespace
	* use attributes
	* set when install: /serviceName:Orders
	* Configure.DefineEndpointName(...)

- 16:30 showing how Saga is stored in RavenDB
	* show RavenDB
	* show queue names
	* shoing how RavenDB store the Saga message

- error queue should be in a centralized queue somewhere

- Timeout
	- in V2.6, timeout is a separate host
	- in 3.0, timout manager is within the endpoint
		* when timeout expired, the message will send back
		* Bus.Defer<T>(...)
			- I want to handle it later, ex. I want to handle it next week (waiting for another piece of info)

-- 29:00		
	